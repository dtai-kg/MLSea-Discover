@prefix mlso: <http://w3id.org/mlso/>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix mls: <http://www.w3.org/ns/mls#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix prov: <http://www.w3.org/ns/prov#>.
@prefix dcat: <http://www.w3.org/ns/dcat#>.
@prefix fabio: <http://purl.org/spar/fabio/>.
@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#>.
@prefix schema: <http://schema.org/>.
@prefix formats: <http://www.w3.org/ns/formats/>.
@prefix comp: <http://semweb.mmlab.be/ns/rml-compression#>.
@prefix void: <http://rdfs.org/ns/void#>.
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#>.
@prefix grel: <http://users.ugent.be/~bjdmeest/function/grel.ttl#>.
@prefix sdo: <https://w3id.org/okn/o/sd#>.
@prefix kg4di: <https://w3id.org/kg4di/definedBy>.
@base <http://example.com/ns#>.


<paper_0> a rr:TriplesMap;

	rml:logicalSource [
		a rml:LogicalSource;
		rml:source [
			a sdo:DatasetSpecification;
			sdo:name "papers_with_abstracts";
		];
		rml:referenceFormulation ql:Dictionary;
		rml:iterator "$.*"
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://w3id.org/mlsea/pwc/scientificWork/{title}";
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdf:type;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:constant mlso:ScientificWork;
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdfs:label;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "title";
			rr:datatype rdfs:Literal
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant dcterms:title;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "title";
			rr:datatype rdfs:Literal
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant dcterms:source;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "paper_url";
			rr:termType rr:IRI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant fabio:hasArXivId;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "arxiv_id";
			rr:datatype rdfs:Literal
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant fabio:abstract;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "abstract";
			rr:datatype rdfs:Literal
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant dcterms:source;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "url_pdf";
			rr:termType rr:IRI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant dcterms:issued;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "date";
			rr:datatype xsd:dateTime
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant dcterms:creator;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:template "http://w3id.org/mlsea/pwc/agent/{authors}";
			rr:termType rr:IRI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant mlso:hasRelatedImlpementation;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:template "http://w3id.org/mlsea/pwc/implementation/{title}";
			rr:termType rr:IRI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant dcat:keyword;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "tasks";
			rr:datatype rdfs:Literal
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant dcat:keyword;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "methods.name";
			rr:datatype rdfs:Literal
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant mlso:hasTaskType;
		];
		rr:objectMap [ 
			a rr:RefObjectMap;
			rr:parentTriplesMap <taskTypes_0>;
			rr:joinCondition [
				rr:child "tasks";
				rr:parent "labels";
			]; 
		];
	].


<algorithm_0> a rr:TriplesMap;

	rml:logicalSource [
		a rml:LogicalSource;
		rml:source [
			a sdo:DatasetSpecification;
			sdo:name "papers_with_abstracts";
		];
		rml:referenceFormulation ql:Dictionary;
		rml:iterator "$.*"
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://w3id.org/mlsea/pwc/algorithm/{methods.name}";
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdf:type;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:constant mls:Algorithm;
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdfs:label;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "methods.name";
			rr:datatype rdfs:Literal
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant dcterms:title;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "methods.name";
			rr:datatype rdfs:Literal
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant mlso:hasAlgorithmType;
		];
		rr:objectMap [ 
			a rr:RefObjectMap;
			rr:parentTriplesMap <algorithmTypes_0>;
			rr:joinCondition [
				rr:child "methods.name";
				rr:parent "labels";
			]; 
		];
	].


<taskTypes_0> a rr:TriplesMap;

	rml:logicalSource [
		a rml:LogicalSource;
		rml:source "../Mappings/PwC/Data/PwC-Types/PwC-Task_Types.csv";
		rml:referenceFormulation ql:CSV;
		rml:iterator "$";
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rml:reference "skos_iris";
	].


<algorithmTypes_0> a rr:TriplesMap;

	rml:logicalSource [
		a rml:LogicalSource;
		rml:source "../Mappings/PwC/Data/PwC-Types/PwC-Algorithm_Types.csv";
		rml:referenceFormulation ql:CSV;
		rml:iterator "$";
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rml:reference "skos_iris";
	].


<author_0> a rr:TriplesMap;

	rml:logicalSource [
		a rml:LogicalSource;
		rml:source [
			a sdo:DatasetSpecification;
			sdo:name "papers_with_abstracts";
		];
		rml:referenceFormulation ql:Dictionary;
		rml:iterator "$.*"
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://w3id.org/mlsea/pwc/agent/{authors}";
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdf:type;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:constant foaf:Agent;
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdfs:label;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "authors";
			rr:datatype rdfs:Literal
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant foaf:name;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "authors";
			rr:datatype rdfs:Literal
		];
	].


<implementation_0> a rr:TriplesMap;

	rml:logicalSource [
		a rml:LogicalSource;
		rml:source [
			a sdo:DatasetSpecification;
			sdo:name "papers_with_abstracts";
		];
		rml:referenceFormulation ql:Dictionary;
		rml:iterator "$.*"
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://w3id.org/mlsea/pwc/implementation/{title}";
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdf:type;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:constant mls:Implementation;
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdfs:label;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:template "implemenation of {title}";
			rr:datatype rdfs:Literal
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant mls:implements;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:template "http://w3id.org/mlsea/pwc/algorithm/{methods.name}";
			rr:termType rr:IRI
		];
	].


