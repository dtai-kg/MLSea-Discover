@prefix mlso: <http://w3id.org/mlso/>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix mls: <http://www.w3.org/ns/mls#>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix grel: <http://users.ugent.be/~bjdmeest/function/grel.ttl#>.
@prefix schema: <http://schema.org/>.
@prefix idlab-fn: <http://example.com/idlab/function/>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix prov: <http://www.w3.org/ns/prov#>.
@prefix open: <http://open.vocab.org/terms/>.
@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#>.
@prefix formats: <http://www.w3.org/ns/formats/>.
@prefix comp: <http://semweb.mmlab.be/ns/rml-compression#>.
@prefix void: <http://rdfs.org/ns/void#>.
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#>.
@base <http://example.com/ns#>.


<task_0> a rr:TriplesMap;

	rml:logicalSource [
		a rml:LogicalSource;
		rml:source "Data/OpenML-Samples/tasks.csv";
		rml:referenceFormulation ql:CSV;
		rml:iterator "$";
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://w3id.org/mlsea/openml/task/{tid}";
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdf:type;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:constant mls:Task;
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdfs:label;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "name";
			rr:datatype rdfs:Literal
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant dcterms:title;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "name";
			rr:datatype rdfs:Literal
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant dcterms:identifier;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "tid";
			rr:datatype xsd:integer
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant prov:atLocation;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "url";
			rr:termType rr:IRI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant mls:definedOn;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:template "http://w3id.org/mlsea/openml/dataset/{did}";
			rr:termType rr:IRI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant mlso:hasTaskType;
		];
		rr:objectMap [ 
			a rr:RefObjectMap;
			rr:parentTriplesMap <taskTypes_0>;
			rr:joinCondition [
				rr:child "task_type";
				rr:parent "value";
			]; 
		];
	].


<evaluationSpecification_0> a rr:TriplesMap;

	rml:logicalSource [
		a rml:LogicalSource;
		rml:source "Data/OpenML-Samples/tasks.csv";
		rml:referenceFormulation ql:CSV;
		rml:iterator "$";
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://w3id.org/mlsea/openml/evaluationSpecification/{tid}";
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdf:type;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:constant mls:EvaluationSpecification;
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdfs:label;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:template "Task {tid} Evaluation Specification";
			rr:datatype rdfs:Literal
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant mls:defines;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:template "http://w3id.org/mlsea/openml/task/{tid}";
			rr:termType rr:IRI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant mls:hasPart;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:template "http://w3id.org/mlsea/openml/evaluationMeasure/{tid}";
			rr:termType rr:IRI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant mls:hasPart;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:template "http://w3id.org/mlsea/openml/evaluationProcedure/{tid}";
			rr:termType rr:IRI
		];
	].


<taskTypes_0> a rr:TriplesMap;

	rml:logicalSource [
		a rml:LogicalSource;
		rml:source "Data/OpenML-Types/task_types.csv";
		rml:referenceFormulation ql:CSV;
		rml:iterator "$";
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rml:reference "skos_uri";
	].


<estimationProcedure_0> a rr:TriplesMap;

	rml:logicalSource [
		a rml:LogicalSource;
		rml:source "Data/OpenML-Samples/tasks.csv";
		rml:referenceFormulation ql:CSV;
		rml:iterator "$";
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://w3id.org/mlsea/openml/evaluationProcedure/{tid}";
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdf:type;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:constant mls:EvaluationProcedure;
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdfs:label;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "estimation_procedure";
			rr:datatype rdfs:Literal
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant mlso:hasEvaluationProcedureType;
		];
		rr:objectMap [ 
			a rr:RefObjectMap;
			rr:parentTriplesMap <estimationProcedureTypes_0>;
			rr:joinCondition [
				rr:child "estimation_procedure_type";
				rr:parent "value";
			]; 
		];
	].


<estimationProcedureTypes_0> a rr:TriplesMap;

	rml:logicalSource [
		a rml:LogicalSource;
		rml:source "Data/OpenML-Types/estimation_procedure_types.csv";
		rml:referenceFormulation ql:CSV;
		rml:iterator "$";
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rml:reference "skos_uri";
	].


